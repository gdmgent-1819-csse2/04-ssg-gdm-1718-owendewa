exports.ids=[5],exports.modules={27:function(n,e,o){var content=o(38);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);var t=o(3).default;n.exports.__inject__=function(n){t("41255107",content,!0,n)}},37:function(n,e,o){"use strict";o.r(e);var t=o(27),r=o.n(t);for(var l in t)"default"!==l&&function(n){o.d(e,n,function(){return t[n]})}(l);e.default=r.a},38:function(n,e,o){(n.exports=o(2)(!1)).push([n.i,".test{margin-left:25%}",""])},49:function(n,e,o){"use strict";o.r(e);var t={computed:{vb4:()=>'<section><h1>Using vectors in our UpdateCanvasHandler method in Canvas.js</h1>\n<p><strong>Creating a vector</strong></p>\n<p>We will be creating a vector2.js file where we wil lcreate a Vector2 class this class contains of an X and Y value</p>\n<pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Vector2</span></span>{\n    <span class="hljs-comment">/**\n     * Represents a 2d Vector\n     * @constructor\n     * @param {Number} x \n     * @param {Number} y \n     */</span>\n    <span class="hljs-keyword">constructor</span>(x,y){\n        <span class="hljs-keyword">this</span>.x = <span class="hljs-built_in">Number</span>(x) || <span class="hljs-number">0</span>;\n        <span class="hljs-keyword">this</span>.y = <span class="hljs-built_in">Number</span>(y) || <span class="hljs-number">0</span>;\n    }\n</code></pre>\n<p><strong>Usage in our UpdateCanvasHandler method in Canvas.js</strong></p>\n<p>This is our basic UpdateCanvasHandler method because of our loop of .5 seconds in our Canvas class this method will be executed every .5 seconds</p>\n<pre><code class="language-js">    updateCanvasHandler(event) {\n        colors.forEach(<span class="hljs-function"><span class="hljs-params">color</span> =&gt;</span> {\n        });\n        <span class="hljs-keyword">this</span>.drawScene();\n    }\n</code></pre>\n<p><strong>We start by creating a new vector</strong></p>\n<p>Our firstvector has an x value of 0 and a y value of .9 this will be pushed in our data object under positions and our color will also be oushed in our data object but under colors this also reffers to our Canvas.js file</p>\n<pre><code class="language-js">    updateCanvasHandler(event) {\n        <span class="hljs-keyword">const</span> firstvector = <span class="hljs-keyword">new</span> Vector2(<span class="hljs-number">0</span>, <span class="hljs-number">0.9</span>)\n        <span class="hljs-keyword">this</span>.data.positions.push(firstvector.x, firstvector.y)\n        <span class="hljs-keyword">this</span>.data.colors.push(...this.colors.black)\n        colors.forEach(<span class="hljs-function"><span class="hljs-params">color</span> =&gt;</span> {\n        });\n        <span class="hljs-keyword">this</span>.drawScene();\n    }\n</code></pre>\n<p><strong>Because we want to make a clock we need to know the time so we will create a seconds, minute and hour variable</strong></p>\n<pre><code class="language-js"><span class="hljs-comment">//Creating date arm</span>\n        <span class="hljs-keyword">const</span> d = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n        <span class="hljs-keyword">const</span> Seconds = d.getSeconds();\n        <span class="hljs-keyword">const</span> Minutes = d.getMinutes();\n        <span class="hljs-keyword">const</span> Hours = d.getHours();\n        <span class="hljs-keyword">const</span> time = Hours + <span class="hljs-string">\':\'</span> + Minutes + <span class="hljs-string">\':\'</span> + Seconds\n        <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">\'clock\'</span>).innerHTML = time\n        <span class="hljs-keyword">const</span> colors = [\n            <span class="hljs-string">\'white\'</span>,\n        ]\n</code></pre>\n<p><strong>Now we are adding our animation</strong></p>\n<p>Because we want our \'clock\' to work we will need to implement rotation on a vector <a href="https://stackoverflow.com/questions/28112315/how-do-i-rotate-a-vector">information about vector rotation</a>;\nwe will use our firstvector as a seconds arm. This works the same for the minutes and hours</p>\n<pre><code class="language-js">    updateCanvasHandler(event) {\n        <span class="hljs-keyword">const</span> firstvector = <span class="hljs-keyword">new</span> Vector2(<span class="hljs-number">0</span>, <span class="hljs-number">0.9</span>)\n        <span class="hljs-keyword">this</span>.data.positions.push(firstvector.x, firstvector.y)\n        <span class="hljs-keyword">this</span>.data.colors.push(...this.colors.black)\n        colors.forEach(<span class="hljs-function"><span class="hljs-params">color</span> =&gt;</span> {\n            <span class="hljs-comment">//Creating seconds arm</span>\n            firstvector.rot((Seconds* <span class="hljs-number">6</span>))\n            <span class="hljs-keyword">this</span>.data.positions.push(firstvector.x, firstvector.y)\n            <span class="hljs-keyword">this</span>.data.colors.push(...this.colors[color])\n        });\n        <span class="hljs-keyword">this</span>.drawScene();\n    }\n</code></pre>\n</section>\n'}},r=o(1);var component=Object(r.a)(t,function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"test",domProps:{innerHTML:this._s(this.vb4)}},[])},[],!1,function(n){var e=o(37);e.__inject__&&e.__inject__(n)},null,"b098e2da");e.default=component.exports}};
//# sourceMappingURL=4ddfd71757d703712d99.js.map